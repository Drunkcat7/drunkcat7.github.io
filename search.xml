<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>4-3.类与对象</title>
    <url>/2020/02/01/4-3.%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h1><p>造车：</p>
<pre><code> 1. 画图纸
 1. 定义车的属性信息：color，speed，seat
 2. 定义车的动作：跑
2. 拿着图纸找工厂生产车</code></pre><p>面向对象的世界里：</p>
<p>​        类：就是图纸</p>
<p>​                属性：这一类事物拥有的共同属性</p>
<p>​                动作：这一类事物共同能执行的功能</p>
<p>​        对象：使用类创建的具体某一个东西</p>
<p>​        对象能干什么？完全取决于类是如何定义的</p>
<p>写代码</p>
<p>​        类要使用class来定义</p>
<p>​        属性：成员变量来描述，直接写在类中的变量</p>
<p>​        动作：成员方法，不写static就是成员方法</p>
<p>​        创建对象：</p>
<p>​        类 引用 = new 类();</p>
<img src="/Users/drunkcat/Library/Application Support/typora-user-images/image-20200118141511421.png" alt="image-20200118141511421" style="zoom:50%;" />

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 成员变量</span></span><br><span class="line">    String color;   <span class="comment">// 颜色</span></span><br><span class="line">    <span class="keyword">int</span> speed;      <span class="comment">// 速度</span></span><br><span class="line">    <span class="keyword">int</span> seat = <span class="number">5</span>;       <span class="comment">// 座位</span></span><br><span class="line">    <span class="comment">// 成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"车能跑"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"车能飞"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        int a = 10;//写在方法里的变量，局部变量</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建对象</span></span><br><span class="line">        <span class="comment">// int a = 10;</span></span><br><span class="line">        <span class="comment">//String color = "呵呵";</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在面向对象的世界里，变量是没有市场的，这种变量被称为引用</span></span><br><span class="line">        <span class="comment">// java分为两种数据类型：1.基本数据类型    2.应用数据类型  String和我们创建的所有的类</span></span><br><span class="line">        Car c = <span class="keyword">new</span> Car();<span class="comment">// 创建对象  创建了一辆车，后面想用这辆车，就需要使用c来访问</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 让车去跑</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//对象或引用.方法();</span></span><br><span class="line">        c.run();<span class="comment">// . 表示调用 ."的"</span></span><br><span class="line"></span><br><span class="line">        c.color = <span class="string">"紫色"</span>;</span><br><span class="line">        c.speed = <span class="number">120</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        c.pailiang = 1.5;    //类中没有定义的内容不可以使用</span></span><br><span class="line"></span><br><span class="line">        System.out.println(c.color);</span><br><span class="line"></span><br><span class="line">        Car c2  = <span class="keyword">new</span> Car();</span><br><span class="line">        c2.color = <span class="string">"灰色"</span>;</span><br><span class="line">        c2.speed =  <span class="number">180</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(c.seat);</span><br><span class="line">        System.out.println(c2.seat);</span><br><span class="line"></span><br><span class="line">        System.out.println(c.color);</span><br><span class="line">        System.out.println(c2.color);</span><br><span class="line"></span><br><span class="line">        c.fly();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java-第四章</category>
      </categories>
      <tags>
        <tag>Java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>4-2.面向对象和面向过程</title>
    <url>/2020/02/01/4-2.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="面向对象和面向过程"><a href="#面向对象和面向过程" class="headerlink" title="面向对象和面向过程"></a>面向对象和面向过程</h1><p>面向过程：侧重的是过程</p>
<p>​        优点：简单</p>
<p>​        缺点：代码量大了之后，维护性非常差</p>
<p>面向对象：侧重的是对象，你是上帝视角，你创建一个大象，告诉大象，进冰箱</p>
<p>​        优点：可扩展性非常强，维护成本低</p>
<p>​        缺点：新手上手难</p>
]]></content>
      <categories>
        <category>Java-第四章</category>
      </categories>
      <tags>
        <tag>Java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>4-1.面向对象概述</title>
    <url>/2020/02/01/4-1.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="面向对象概述"><a href="#面向对象概述" class="headerlink" title="面向对象概述"></a>面向对象概述</h1><p>重点知识点：</p>
<ol>
<li>类与对象</li>
<li>构造方法</li>
<li>访问权限</li>
<li>继承</li>
<li>多态（最重要）</li>
<li>抽象和接口</li>
<li>内存分析</li>
</ol>
<p>其他知识点不是说不重要。相对而言，最重要的是上面这几个</p>
]]></content>
      <categories>
        <category>Java-第四章</category>
      </categories>
      <tags>
        <tag>Java面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>3-5.方法的重载</title>
    <url>/2020/02/01/3-5.%E6%96%B9%E6%B3%95%E7%9A%84%E9%87%8D%E8%BD%BD/</url>
    <content><![CDATA[<h1 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h1><h5 id="重载：方法的名字相同，参数的个数或者类型不同"><a href="#重载：方法的名字相同，参数的个数或者类型不同" class="headerlink" title="重载：方法的名字相同，参数的个数或者类型不同"></a>重载：方法的名字相同，参数的个数或者类型不同</h5><p>和返回值没有关系.</p>
<p>在执行的时候，程序会自动的根据你给的参数去找对应的方法，执行</p>
<p>方法的重载可以让我们省去取名字的烦恼</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//吃</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">chi</span><span class="params">(String fan)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"吃"</span>+fan);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">chi</span><span class="params">(String fan,String cai)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"吃"</span>+fan);</span><br><span class="line">    System.out.println(<span class="string">"吃"</span>+cai);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    chi(<span class="string">"大米饭"</span>);</span><br><span class="line">    chi(<span class="string">"小米饭"</span>);</span><br><span class="line"></span><br><span class="line">    chi(<span class="string">"大米饭"</span>,<span class="string">"鱼香肉丝"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Java-第三章</category>
      </categories>
      <tags>
        <tag>Java方法</tag>
      </tags>
  </entry>
  <entry>
    <title>3-4.方法练习</title>
    <url>/2020/02/01/3-4.%E6%96%B9%E6%B3%95%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="方法练习"><a href="#方法练习" class="headerlink" title="方法练习"></a>方法练习</h1><ol>
<li><p>写方法，给方法传递两个整数a，b；返回a和b中比较大的那个数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来比较两个数据的大小，返回大的那个</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> a 第一个数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> b 第二个数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  比较大的数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a&gt;=b)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c = compare(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    System.out.println(c);</span><br><span class="line">    <span class="comment">//或者</span></span><br><span class="line">    System.out.println(compare(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="2">
<li><p>写方法，把传入的数组反转并返回</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接收一个数组，把数组中的数据反转，返回</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arr 接收的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  翻转之后的数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] reverse(<span class="keyword">int</span>[] arr)&#123;</span><br><span class="line">    <span class="comment">//返回的是一个数组</span></span><br><span class="line">    <span class="keyword">int</span>[] ret = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;<span class="comment">//ret数组的下标</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length-<span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)&#123;<span class="comment">//反着那数据</span></span><br><span class="line">        ret[index] = arr[i];<span class="comment">//正向往里面装</span></span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] a =&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span>[] b = reverse(a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;b.length;i++)&#123;</span><br><span class="line">        System.out.print(b[i]+<span class="string">","</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h5 id="三元表达式，三目运算符"><a href="#三元表达式，三目运算符" class="headerlink" title="三元表达式，三目运算符"></a>三元表达式，三目运算符</h5><ul>
<li>x? y:z</li>
<li>如果x为真，则执行y否则执行z</li>
</ul>
]]></content>
      <categories>
        <category>Java-第三章</category>
      </categories>
      <tags>
        <tag>Java方法</tag>
      </tags>
  </entry>
  <entry>
    <title>3-3.方法的参数</title>
    <url>/2020/02/01/3-3.%E6%96%B9%E6%B3%95%E7%9A%84%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h1 id="方法的参数"><a href="#方法的参数" class="headerlink" title="方法的参数"></a>方法的参数</h1><h5 id="参数：在方法执行的时候，给方法传递的信息"><a href="#参数：在方法执行的时候，给方法传递的信息" class="headerlink" title="参数：在方法执行的时候，给方法传递的信息"></a>参数：在方法执行的时候，给方法传递的信息</h5><blockquote>
<p>public static 返回值类型 方法名（形参）{</p>
<p>​    方法体</p>
<p>} </p>
<p>方法名（实参）；//调用方法</p>
</blockquote>
<ul>
<li>形参：接收数据</li>
<li>实参：传递信息</li>
</ul>
<p>在方法中可以有多个参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">gem</span><span class="params">(<span class="keyword">int</span> zhi,String color)</span></span>&#123;</span><br><span class="line">    System.out.println(zhi+<span class="string">"只"</span>+<span class="string">"邓"</span>+color+<span class="string">"棋"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    gem(<span class="number">1</span>,<span class="string">"紫"</span>);</span><br><span class="line">    gem(<span class="number">2</span>,<span class="string">"蓝"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>注意：</p>
<ol>
<li>参数的个数必须匹配</li>
<li>参数的数据类型要匹配</li>
</ol>
]]></content>
      <categories>
        <category>Java-第三章</category>
      </categories>
      <tags>
        <tag>Java方法</tag>
      </tags>
  </entry>
  <entry>
    <title>3-2.方法的返回值</title>
    <url>/2020/02/01/3-2.%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/</url>
    <content><![CDATA[<h1 id="方法的返回值"><a href="#方法的返回值" class="headerlink" title="方法的返回值"></a>方法的返回值</h1><ul>
<li>返回值：执行方法之后得到的结果</li>
</ul>
<blockquote>
<p>public static 返回值类型 方法名（）{</p>
<p>​    方法体</p>
<p>​    //需要使用return进行返回</p>
<p>​    return“返回值内容”；//返回值类型和返回值必须匹配 </p>
<p>} </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">buy</span><span class="params">()</span></span>&#123;<span class="comment">//注意返回值类型</span></span><br><span class="line">    System.out.println(<span class="string">"我要去买烟了"</span>);</span><br><span class="line">    <span class="comment">//需要使用return进行返回</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"中华香烟"</span>;<span class="comment">//返回值类型和返回值必须匹配</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    buy();<span class="comment">//没有接受返回值</span></span><br><span class="line">    <span class="comment">//返回值返回给调用方</span></span><br><span class="line"></span><br><span class="line">    String yan = buy();<span class="comment">//接受返回值</span></span><br><span class="line">    System.out.println(<span class="string">"得到的返回值是"</span>+yan);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<p>1.返回值类型和返回值必须匹配</p>
<p>2.如果写了返回值类型，必须要有返回值</p>
<p>3.如果写了返回值，必须要写返回值类型</p>
<p>4.没有返回值，返回值类型要写void，方法体里可以不写return，或者return后面不跟返回值</p>
<p>5.return之后不可以再写代码了</p>
<p>以上5点都要遵守</p>
]]></content>
      <categories>
        <category>Java-第三章</category>
      </categories>
      <tags>
        <tag>Java方法</tag>
      </tags>
  </entry>
  <entry>
    <title>3-1.方法的定义</title>
    <url>/2020/02/01/3-1.%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<h1 id="方法的定义"><a href="#方法的定义" class="headerlink" title="方法的定义"></a>方法的定义</h1><p>方法</p>
<p>方法：对功能或者动作的封装,在需要的时候拿出来调用一下</p>
<blockquote>
<p>public static void 方法名（）{</p>
<p>​        方法体</p>
<p>}     </p>
</blockquote>
<p>方法名（）；//调用方法</p>
<p>方法体：这件事到底应该怎么做</p>
]]></content>
      <categories>
        <category>Java-第三章</category>
      </categories>
      <tags>
        <tag>Java方法</tag>
      </tags>
  </entry>
  <entry>
    <title>2-21.练习题</title>
    <url>/2020/02/01/2-21.%E9%B8%A1%E5%85%94%E5%90%8C%E7%AC%BC%E3%80%81%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h1 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第一题第一问//有一个笼子，笼子里有m只鸡，n只兔子，问，一共有多少只脚</span></span><br><span class="line">Scanner a = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">Scanner b = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"输入鸡的数量"</span>);</span><br><span class="line"><span class="keyword">int</span> ji = a.nextInt();</span><br><span class="line">System.out.println(<span class="string">"输入兔的数量"</span>);</span><br><span class="line"><span class="keyword">int</span> tu = b.nextInt();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"一共有有"</span>+((ji*<span class="number">2</span>)+(tu*<span class="number">4</span>))+<span class="string">"只脚"</span>);</span><br><span class="line"><span class="comment">//第一题//</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//难点  //第一题第二问//让用户输入脚的数量，然后程序去帮用户分析出可能会有多少只鸡，多少只兔子</span></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入有多少只脚"</span>);</span><br><span class="line">        <span class="keyword">int</span> jiao = scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> ji = <span class="number">0</span>;ji &lt;= jiao/<span class="number">2</span>;ji++)&#123;<span class="comment">//鸡</span></span><br><span class="line">            <span class="keyword">int</span> tujiao = jiao - ji*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (tujiao % <span class="number">4</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">"有鸡"</span>+ji+<span class="string">"只，有兔子"</span>+tujiao/<span class="number">4</span>+<span class="string">"只"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//第一题//</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第二题//水仙花数是指一个三位数，他的每个位上的数字3次幕之和等于它本身（例如：1^3+5^3+3^3 = 153）</span></span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"请输入一个三位数"</span>);</span><br><span class="line"><span class="keyword">int</span> a = scanner.nextInt();</span><br><span class="line"><span class="keyword">if</span>(a &gt;= <span class="number">100</span> &amp;&amp; a &lt;= <span class="number">999</span>) &#123;</span><br><span class="line">    <span class="comment">//获取百位数</span></span><br><span class="line">    <span class="keyword">int</span> bai = a / <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> shi = (a % <span class="number">100</span>) / <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> ge = (a % <span class="number">100</span>) % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == bai * bai * bai + shi * shi * shi + ge * ge * ge) &#123;</span><br><span class="line">        System.out.println(<span class="string">"是水仙花数"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"不是水仙花数"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">"输入不规范！请输入三位数"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二题//</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java练习题</tag>
      </tags>
  </entry>
  <entry>
    <title>2-20.数组练习题</title>
    <url>/2020/02/01/2-20.%E6%95%B0%E7%BB%84%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h1 id="数组练习题"><a href="#数组练习题" class="headerlink" title="数组练习题"></a>数组练习题</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第一题//寻找数组中最大的数</span></span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">12</span>,<span class="number">41</span>,<span class="number">24</span>,<span class="number">223</span>,<span class="number">123</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i]&gt;max)&#123;</span><br><span class="line">        max = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(max);</span><br><span class="line"><span class="comment">//第一题//</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第二题//计算数组中所有数据的和</span></span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">    sum += arr[i];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(sum);</span><br><span class="line"><span class="comment">//第二题//</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java练习题</tag>
      </tags>
  </entry>
  <entry>
    <title>2-19.数组</title>
    <url>/2020/02/01/2-19.%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>数组：具有相同数据类型的集合</p>
<p>java中的数组</p>
<blockquote>
<ol>
<li>类型[]数组名 = new 类型[大小]；</li>
<li>类型[]数组名 = {数据，数据，数据…}；</li>
<li>类型[]数组名 = new 类型[]{数据，数据，数据…}；</li>
</ol>
</blockquote>
<p>第一种 准备一个袋子 并设置可以放多少数据</p>
<p>第二种 准备袋子 并把数据放进去 无数据限制</p>
<p>第三种 准备袋子 并把数据放进去 无数据限制</p>
<h5 id="怎么用数组-数组名字-小标"><a href="#怎么用数组-数组名字-小标" class="headerlink" title="怎么用数组  数组名字[小标]"></a>怎么用数组  数组名字[小标]</h5><p>​    数组必须配合数组的小标使用</p>
<p>​    数组的小标从0开始</p>
<p>如何查看数组中所有的数据</p>
<p>​    数组的遍历</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//打印数组中所有的数据</span></span><br><span class="line"><span class="keyword">int</span>[] x = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt;x.length ; i++)&#123;	<span class="comment">//x.length表示数组中有多少个数据 -&gt; 数组的长度</span></span><br><span class="line">	  System.out.println(x[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>length表示数组的长度</li>
</ul>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java数组</tag>
      </tags>
  </entry>
  <entry>
    <title>2-18.break和continue</title>
    <url>/2020/02/01/2-18.break%E5%92%8Ccontinue/</url>
    <content><![CDATA[<h1 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h1><ul>
<li>break</li>
</ul>
<p>​    中断，终止一个循环的执行</p>
<ul>
<li>continu</li>
</ul>
<p>​    终止，停止当前本次循环，继续执行下一次循环</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java循环</tag>
      </tags>
  </entry>
  <entry>
    <title>2-17.do···while循环</title>
    <url>/2020/02/01/2-17.do%C2%B7%C2%B7%C2%B7while%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<h1 id="do···while循环"><a href="#do···while循环" class="headerlink" title="do···while循环"></a>do···while循环</h1><p>do…while把while反着写</p>
<blockquote>
<p>do{</p>
<p>​    循环体</p>
<p>}while（条件）；</p>
</blockquote>
<p>do…while不论如何都会执行一次循环体；</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java循环</tag>
      </tags>
  </entry>
  <entry>
    <title>2-16.for循环</title>
    <url>/2020/02/01/2-16.for%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<h1 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h1><blockquote>
<p>for（语句1；语句2；语句3）{</p>
<p>​        循环体</p>
<p>}</p>
</blockquote>
<img src="/Users/drunkcat/Library/Application Support/typora-user-images/image-20200116172028930.png" alt="image-20200116172028930" style="zoom:50%;" />

<ul>
<li>执行流程：语句1-&gt;语句2-&gt;循环体-&gt;语句3-&gt;语句2-&gt;循环体-&gt;语句3·····</li>
<li>语句1：初始化循环变量； int i = ？</li>
<li>语句2：判断是否继续执行循环；</li>
<li>语句3：改变循环变量；i ++</li>
</ul>
<p>使用for循环的频率是非常高的</p>
<blockquote>
<h5 id="for死循环"><a href="#for死循环" class="headerlink" title="for死循环"></a>for死循环</h5><p>for（；；）{</p>
<p>​        循环体</p>
<p>}</p>
</blockquote>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java循环</tag>
      </tags>
  </entry>
  <entry>
    <title>2-15.switch语句</title>
    <url>/2020/02/01/2-15.switch%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h1 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h1><p>switch 也是条件分支语句</p>
<blockquote>
<p>switch(变量){</p>
<p>​        case 值 1：</p>
<p>​                xxxx</p>
<p>​                break；</p>
<p>​        case 值 2:</p>
<p>​                xxxx</p>
<p>​                break；</p>
<p>​        ·····</p>
<p>​        default：</p>
<p>​                xxxx</p>
<p>}</p>
</blockquote>
<p>如果没有break，会产生case穿透现象</p>
<p>一个case被匹配成功，后面的case就不匹配了 但是会执行里面的代码</p>
<p>常用的还是if语句，结构语法都比较清晰</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java判断</tag>
      </tags>
  </entry>
  <entry>
    <title>2-14.运算符-一元运算</title>
    <url>/2020/02/01/2-14.%E8%BF%90%E7%AE%97%E7%AC%A6-%E4%B8%80%E5%85%83%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="运算符-一元运算"><a href="#运算符-一元运算" class="headerlink" title="运算符-一元运算"></a>运算符-一元运算</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">a++;</span><br><span class="line">		让a自增<span class="number">1</span>	a = a + <span class="number">1</span></span><br><span class="line">a--；</span><br><span class="line">    让a自减<span class="number">1</span>	a = a - <span class="number">1</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java基础运算</tag>
      </tags>
  </entry>
  <entry>
    <title>2-13.运算符-逻辑运算</title>
    <url>/2020/02/01/2-13.%E8%BF%90%E7%AE%97%E7%AC%A6-%E9%80%BB%E8%BE%91%E5%88%A4%E6%96%AD%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="运算符-逻辑运算"><a href="#运算符-逻辑运算" class="headerlink" title="运算符-逻辑运算"></a>运算符-逻辑运算</h1><p><strong>&amp;&amp;并且：</strong>左右两端同时为真，最后的结果才能是真</p>
<p><strong>||或者：</strong>左右两端有一个是真，结果就是真</p>
<p><strong>！：</strong>非，不，非假既真，非真既假</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java基础运算</tag>
      </tags>
  </entry>
  <entry>
    <title>2-12.运算符-比较运算</title>
    <url>/2020/02/01/2-12.%E8%BF%90%E7%AE%97%E7%AC%A6-%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="运算符-比较运算"><a href="#运算符-比较运算" class="headerlink" title="运算符-比较运算"></a>运算符-比较运算</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;</span><br><span class="line">&gt;</span><br><span class="line">&lt;=</span><br><span class="line">&gt;=</span><br><span class="line">== 判断左右两端是否相等</span><br><span class="line">!= 判断左右两端是否不相等</span><br></pre></td></tr></table></figure>



<p>比较运算的结果一定是boolean值</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java基础运算</tag>
      </tags>
  </entry>
  <entry>
    <title>2-11.运算符-赋值扩展运算</title>
    <url>/2020/02/01/2-11.%E8%BF%90%E7%AE%97%E7%AC%A6-%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="运算符-赋值扩展运算"><a href="#运算符-赋值扩展运算" class="headerlink" title="运算符-赋值扩展运算"></a>运算符-赋值扩展运算</h1><p>= 把等号右边计算的结果赋值给等号左边的变量</p>
<p>累加 +=</p>
<p>累减 -=</p>
<p>累乘 * =</p>
<p>累除 /=</p>
<p>累余 %=</p>
<p>a = a + 10 -&gt; a += 10</p>
<p>懒惰是程序员的基础</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java基础运算</tag>
      </tags>
  </entry>
  <entry>
    <title>2-10.运算符-算数运算</title>
    <url>/2020/02/01/2-10.%E8%BF%90%E7%AE%97%E7%AC%A6-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="运算符-算数运算"><a href="#运算符-算数运算" class="headerlink" title="运算符-算数运算"></a>运算符-算数运算</h1><p>加法：+</p>
<p>减法：-</p>
<p>乘法：x</p>
<p>除法：/</p>
<p>余数：%</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java基础运算</tag>
      </tags>
  </entry>
  <entry>
    <title>2-9.基本数据类型之间的运算</title>
    <url>/2020/02/01/2-9.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="基本数据类型之间的运算"><a href="#基本数据类型之间的运算" class="headerlink" title="基本数据类型之间的运算"></a>基本数据类型之间的运算</h1><h5 id="1-相同数据类型之间"><a href="#1-相同数据类型之间" class="headerlink" title="1. 相同数据类型之间"></a>1. 相同数据类型之间</h5><p>​    相同数据类型进行计算，得到的一定是这个数据类型</p>
<p>​    int + int = int;</p>
<h5 id="2-不同数据类型之间"><a href="#2-不同数据类型之间" class="headerlink" title="2. 不同数据类型之间"></a>2. 不同数据类型之间</h5><p>​    int + long = long</p>
<p>​    首先，把小的数据类型自动转化成大的数据类型，然后再进行计算，得到的结果一定是大的数据类型</p>
<h5 id="3-特殊的byte，short，char"><a href="#3-特殊的byte，short，char" class="headerlink" title="3. 特殊的byte，short，char"></a>3. 特殊的byte，short，char</h5><p>​    在计算的时候，首先会转化成int类型然后再进行计算，这样是安全的</p>
<p>​    byte + byte = int</p>
<p>​    结果至少是int</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">short</span> s1 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//short s2 = s1 + 1;//程序会报错</span></span><br><span class="line"><span class="keyword">short</span> s2 = (<span class="keyword">short</span>)(s1 + <span class="number">1</span>);</span><br><span class="line">System.out.println(s2);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java基础运算</tag>
      </tags>
  </entry>
  <entry>
    <title>2-8.基本数据类型之间的转换</title>
    <url>/2020/02/01/2-8.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="基本数据类型之间的转换"><a href="#基本数据类型之间的转换" class="headerlink" title="基本数据类型之间的转换"></a>基本数据类型之间的转换</h1><p>顺序：量的大小</p>
<p>byte-&gt;short, char-&gt;int-&gt;long-&gt;float-&gt;double</p>
<p>小数据类型-&gt;大数据类型：安全的.直接转化</p>
<p>大数据类型-&gt;小数据类型：不一定安全.可能会出现问题.必须要强转</p>
<blockquote>
<p>（转换之后的数据类型） 变量</p>
</blockquote>
<ul>
<li>正常转换</li>
</ul>
<p>int a = 10;</p>
<p>long b = a; //安全的</p>
<p>System.<em>out</em>.println(b);</p>
<ul>
<li>强制转换</li>
</ul>
<p>long c =10;</p>
<p>int d = (int) c;//如果产生了溢出。程序就不可控了</p>
<p>System.<em>out</em>.println(d);</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java类型转换</tag>
      </tags>
  </entry>
  <entry>
    <title>2-7.基本数据类型小结</title>
    <url>/2020/02/01/2-7.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h1 id="基本数据类型小结"><a href="#基本数据类型小结" class="headerlink" title="基本数据类型小结"></a>基本数据类型小结</h1><p>整数</p>
<pre><code>1. byte 字节                8bit     1byte
   2. short 短整数        16bit     2byte
   3. int 整数                 32bit     4byte
   4. long长整数           64bit     8byte    </code></pre><p>小数</p>
<ol>
<li>float 单精度小数        32bit    4byte</li>
<li>double 双精度小数    64bit    8byte</li>
</ol>
<p>字符</p>
<p>​        char 单一文字符号    16bit    2byte</p>
<p>​        必须用单引号括起来</p>
<p>布尔</p>
<p>​        boolean 在计算机中    8bit    1byte</p>
<p>​        true，false</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>2-6.基本数据类型详解-boolean</title>
    <url>/2020/02/01/2-6.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3-%E5%B8%83%E5%B0%94/</url>
    <content><![CDATA[<h1 id="基本数据类型详解-boolean"><a href="#基本数据类型详解-boolean" class="headerlink" title="基本数据类型详解-boolean"></a>基本数据类型详解-boolean</h1><p>取值范围：true false</p>
<p>8bit 1byte</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>2-5.基本数据类型详解-字符</title>
    <url>/2020/02/01/2-5.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3-%E5%AD%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="基本数据类型详解-字符"><a href="#基本数据类型详解-字符" class="headerlink" title="基本数据类型详解-字符"></a>基本数据类型详解-字符</h1><p>字符：单一的文字符号</p>
<p>char    16bit    unicode标准</p>
<p>char    类型的数据可以存放数字，存放的数字实际上是字符 （流程 输入一个数字-&gt;转化成二进制-&gt;在万国码中找到对应的字符）</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>2-4.基本数据类型详解-小数</title>
    <url>/2020/02/01/2-4.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3-%E5%B0%8F%E6%95%B0/</url>
    <content><![CDATA[<h1 id="基本数据类型详解-小数"><a href="#基本数据类型详解-小数" class="headerlink" title="基本数据类型详解-小数"></a>基本数据类型详解-小数</h1><table>
<thead>
<tr>
<th>数据类型</th>
<th>位</th>
<th>字节</th>
<th>小数位数</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>double</td>
<td>64bit</td>
<td>8byte</td>
<td>最多保留小数点后17位</td>
<td>双精度小数</td>
</tr>
<tr>
<td>float</td>
<td>32bit</td>
<td>4byte</td>
<td>最多保留小数点后8位</td>
<td>单精度小数</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>2-3.基本数据类型详解-整数</title>
    <url>/2020/02/01/2-3.%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3-%E6%95%B4%E6%95%B0/</url>
    <content><![CDATA[<h1 id="基本数据类型详解-整数"><a href="#基本数据类型详解-整数" class="headerlink" title="基本数据类型详解-整数"></a>基本数据类型详解-整数</h1><table>
<thead>
<tr>
<th align="left">数据类型</th>
<th>位</th>
<th>字节</th>
<th>数据范围</th>
</tr>
</thead>
<tbody><tr>
<td align="left">int 整数</td>
<td>32bit</td>
<td>4byte</td>
<td>-21亿～21亿</td>
</tr>
<tr>
<td align="left">byte Java程序中最小的数据单元</td>
<td>8bit</td>
<td>1byte</td>
<td>-128～127</td>
</tr>
<tr>
<td align="left">short 短整数</td>
<td>16bit</td>
<td>2byte</td>
<td>-32768～32767</td>
</tr>
<tr>
<td align="left">long 长整数</td>
<td>64bit</td>
<td>8byte</td>
<td>2^63</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>2-2.编码</title>
    <url>/2020/02/01/2-2.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A0%81/</url>
    <content><![CDATA[<h1 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h1><ol>
<li><p>ascii数字，英文字母，特殊符号 128个.7bit，8bit</p>
</li>
<li><p>gbk中文，日文，韩文.16bit</p>
</li>
<li><p>unicode 万国码，32bit usc-2（16bit），ucs-4（32bit）</p>
</li>
<li><p>utf-8 可变长度unicode</p>
</li>
</ol>
<p>​    bit（位）byte（字节）</p>
<p>​    英文：8bit 1byte</p>
<p>​    欧洲文字：16bit 2byte</p>
<p>​    中文：24bit 3byte</p>
<p>java用的是unicode 万国码</p>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title>2-1.二进制</title>
    <url>/2020/02/01/2-1.%E4%BA%8C%E8%BF%9B%E5%88%B6/</url>
    <content><![CDATA[<h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><ol>
<li><p>计算机如何表示数字？</p>
<p>计算机使用通电和不通电两种状态来帮助我们模拟出01的概念，01组成二进制运算，就可以表示出具体的某个数字</p>
</li>
<li><p>二进制和十进制互相的转换<br>二进制 -&gt; 十进制：</p>
<p>​        从右向左写出1，2，4，8，16，32····把对应1位置的数字加起来就是十进制<br>十进制 -&gt; 二进制：</p>
<p>​        把数字进行整除2，留下余数，用商继续整除2····直到商为0的时候停止然后把余数进行倒排序 就得到了二进制的数</p>
<img src="/Users/drunkcat/Library/Application Support/typora-user-images/image-20200116141610874.png" alt="image-20200116141610874" style="zoom:50%;" />

<p>计算机是使用二进制来保存数字的.</p>
<p>十进制：0-9</p>
<p>二进制：0-1</p>
<p>八进制：0-7</p>
<p>十六进制：0-9A-F</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Java-第二章</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>1-15.while循环</title>
    <url>/2020/01/31/1-15.while%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<h1 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h1><p>在java中一共提供了三种循环</p>
<p>1.while循环</p>
<p>2.for循环</p>
<p>3.do···while循环</p>
<p>while循环</p>
<blockquote>
<p>while(条件){</p>
<p>​        xxxxx(循环体)</p>
<p>}</p>
</blockquote>
<p>执行逻辑：</p>
<p>​        判断条件是否为真，如果条件真，执行循环体，再次判断条件是否为真，如果条件为真，继续执行循环体</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java循环</tag>
      </tags>
  </entry>
  <entry>
    <title>1-14.if语句</title>
    <url>/2020/01/31/1-14.if%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h1 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h1><p>用来做条件判断的</p>
<p>if语句的语法</p>
<blockquote>
<p>if(条件){</p>
<p>​        xxxxx</p>
<p>}</p>
</blockquote>
<p>逻辑：</p>
<p>​        判断条件是否为真（true），就去xxxxx</p>
<blockquote>
<p>if(条件){</p>
<p>​        xxxxx</p>
<p>}else{</p>
<p>​        yyyyy</p>
<p>}</p>
</blockquote>
<p>逻辑：</p>
<p>​        如果条件为真，xxxxx；否则，yyyyy</p>
<blockquote>
<p>if(条件1){</p>
<p>​        xxxxx</p>
<p>}else if(条件2){</p>
<p>​        yyyyy</p>
<p>}else if(条件3){</p>
<p>​        yyyyy</p>
<p>}else{</p>
<p>​        nnnnn</p>
<p>}</p>
</blockquote>
<p>逻辑：</p>
<p>​        判断条件1是否成立，如果成立，执行xxxxx；</p>
<p>​        否则如果条件2是否成立，如果成立，执行yyyyy；</p>
<p>​        否则如果条件3是否成立，如果成立，执行zzzzz；</p>
<p>​        如果都不成立，最终执行nnnnn；</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java判断</tag>
      </tags>
  </entry>
  <entry>
    <title>1-13.用户输入</title>
    <url>/2020/01/31/1-13.%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/</url>
    <content><![CDATA[<h1 id="用户输入"><a href="#用户输入" class="headerlink" title="用户输入"></a>用户输入</h1><p>Scanner：扫描器</p>
<p>先创建扫描器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner sc = <span class="keyword">new</span> Scanner（String.in）;</span><br></pre></td></tr></table></figure>



<p>获取数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sc.nextInt();</span><br><span class="line">sc.nextDouble();</span><br><span class="line">sc.nextLine();<span class="comment">//获取字符串</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java小知识</tag>
      </tags>
  </entry>
  <entry>
    <title>1-12.String</title>
    <url>/2020/01/31/1-12.String/</url>
    <content><![CDATA[<h1 id="String"><a href="#String" class="headerlink" title="String"></a>String</h1><p>字符串</p>
<p>在java中使用“”来描述字符串</p>
<p>字符串可以执行 + 操作；表示字符串的拼接</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>1-11.boolean</title>
    <url>/2020/01/31/1-11.boolean/</url>
    <content><![CDATA[<h1 id="boolean"><a href="#boolean" class="headerlink" title="boolean"></a>boolean</h1><p>int 整数</p>
<p>double 小数</p>
<p>boolean 布尔值    保存的是一个状态；成立（true）不成立（false）</p>
<p>取值范围：</p>
<p>​        true 成立  -&gt; 真</p>
<p>​        false 不成立  -&gt; 假</p>
<p>布尔值主要是用来做条件判断的</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>1-10.double</title>
    <url>/2020/01/31/1-10.double/</url>
    <content><![CDATA[<h1 id="double"><a href="#double" class="headerlink" title="double"></a>double</h1><p>int：整数</p>
<p>double：小数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">+ - * / %</span><br></pre></td></tr></table></figure>



<p>double类型的操作和int基本一样，不同的是double计算的结果一般都是double类型</p>
<p>= 赋值操作，把等号右边的结果赋值给等号左边的变量</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>1-9.变量和int</title>
    <url>/2020/01/31/1-9.%E5%8F%98%E9%87%8F%E5%92%8Cint/</url>
    <content><![CDATA[<h1 id="变量和int"><a href="#变量和int" class="headerlink" title="变量和int"></a>变量和int</h1><p>岳哥：13012121212</p>
<p>岳哥：18613131313</p>
<p>变量：就是可以发生改变的量</p>
<p>变量的意义：把程序运行过程中产生的值，保存起来，方便后面使用</p>
<p>变量的声明：</p>
<blockquote>
<p>​        数据类型 变量名 = 值；</p>
</blockquote>
<p>数据类型：人对数据进行分类，告诉计算机可以执行的操作</p>
<p>java的数据类型：</p>
<pre><code>1. int 整数
  2. double 小数
  3. boolean 布尔值
  4. String 字符串</code></pre><p>int：整数：数学的算术运算</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">+ - * / %</span><br></pre></td></tr></table></figure>



<p>%：计算余数</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>1-8.注释</title>
    <url>/2020/01/31/1-8.%E6%B3%A8%E9%87%8A/</url>
    <content><![CDATA[<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>注释：就是对咱们写的代码进行解释和说明</p>
<p>注释不会影响咱们程序的正常执行</p>
<p>java的注释：</p>
<ol>
<li>单行注释<br>//你要注释的内容</li>
<li>多行注释<br>/*注释的内容*/</li>
<li>文档注释<br>/**注释的 内容**/</li>
</ol>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java小知识</tag>
      </tags>
  </entry>
  <entry>
    <title>1-7.第一个java程序</title>
    <url>/2020/01/31/1-7.%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="第一个java程序"><a href="#第一个java程序" class="headerlink" title="第一个java程序"></a>第一个java程序</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span>&#123;</span><br><span class="line">  	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    		System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>注意：</p>
<ol>
<li>java程序严格区分大小写</li>
<li>所有的标点符号必须是英文状态的标点符号</li>
<li>Javac 文件名.java</li>
<li>Java 类名</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>第一个程序</tag>
      </tags>
  </entry>
  <entry>
    <title>1-6.java相关概念</title>
    <url>/2020/01/31/1-6.java%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<h1 id="java相关概念"><a href="#java相关概念" class="headerlink" title="java相关概念"></a>java相关概念</h1><p>编译型：执行效率高，跨平台不够好</p>
<p>解释型：执行效率不高，跨平台性比较好</p>
<p>java是先编译后解释执行</p>
<p>java程序能够跨平台完全是依赖于java虚拟机( JVM )</p>
<p>程序想运行，光有JVM不够。还需要一些其他的java的内容来帮助我</p>
<p>JRE（Java Runtime Environment）java的运行时环境，jvm + java的类库</p>
<p>JDK（java Development kit）java的开发包。JRE + java需要的工具 </p>
<img src="/Users/drunkcat/Library/Application Support/typora-user-images/image-20200115171055117.png" alt="image-20200115171055117" style="zoom:30%;" />

<img src="/Users/drunkcat/Library/Application Support/typora-user-images/image-20200115171201752.png" alt="image-20200115171201752" style="zoom:25%;" />]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java导学</tag>
      </tags>
  </entry>
  <entry>
    <title>1-5.java简介</title>
    <url>/2020/01/31/1-5.Java%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="java简介"><a href="#java简介" class="headerlink" title="java简介"></a>java简介</h1><p>sun公司</p>
<p>James Gosling</p>
<p>Java的发展史：</p>
<p>1991年，Oak诞生</p>
<p>1995年，更名为Java</p>
<p>1996年，发布1.0版本    正式和用户见面</p>
<p>1998年，发布1.2版本    J2EE正式问世</p>
<p>1999年，发布三个1.2版本     J2SE  J2EE  J2ME</p>
<p>2004年，发布1.5    并更改版本号为5.0</p>
<p>2005年，发布取消J2ME中的2，改为JavaSE JavaEE JavaME</p>
<p>2006年，java公布第一批源代码    java开源</p>
<p>2009年，sun被oracle收购</p>
<p>2011年，oracle发布Java7</p>
<p>···</p>
<p>今Java13</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java导学</tag>
      </tags>
  </entry>
  <entry>
    <title>1-4.编程语言的分类</title>
    <url>/2020/01/31/1-4.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="编程语言的分类"><a href="#编程语言的分类" class="headerlink" title="编程语言的分类"></a>编程语言的分类</h1><p>地球文字 -&gt; 翻译 -&gt; 火星文字</p>
<ol>
<li>全文翻译：一次性把所有的文字进行翻译，翻译完的结果火星人是直接就认识的，速度会很快。土星人来了原来翻译的内容就不好使了</li>
<li>边说边练：一句一句的翻译，一句一句的练习，练习的速度很慢。优势：当土星人来了。只需要准备一个会土星文字的人即可</li>
</ol>
<p>编程：</p>
<p>人类语言 -&gt; 翻译 -&gt; 机器语言</p>
<ol>
<li><p>编译型：全文翻译，一次性把所有的代码进行编译，一次编译，到处运行。优点：执行效率高；缺点：跨平台性不够好。C语言，C++，go语言</p>
</li>
<li><p>解释型：边说边练，一句一句的解释执行我们的代码。优点：跨平台性比较好；缺点：执行效率比较低</p>
<p>python</p>
</li>
<li><p>混合型：先编译后解释执行.Java</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java导学</tag>
      </tags>
  </entry>
  <entry>
    <title>1-3.常见的编程语言介绍</title>
    <url>/2020/01/31/1-3.%E5%B8%B8%E8%A7%81%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="常见的编程语言介绍"><a href="#常见的编程语言介绍" class="headerlink" title="常见的编程语言介绍"></a>常见的编程语言介绍</h1><p>倚天屠龙记的门派来介绍！</p>
<ol>
<li><p>少林派 -&gt; C语言        执行效率高，运行速度快；它可以直接操作内存；主要作用：计算机底层的硬件驱动，操作系统；windows就是用C语言编写的。</p>
</li>
<li><p>武当派 -&gt; C++         执行效率也很高，但是没有C语言效率高；C++源自于C语言</p>
</li>
<li><p>峨眉派 -&gt; C#            微软的产品，只能在windows平台运行；主要作用：一般用来做游戏；C#源自于C语言</p>
</li>
<li><p>明教 -&gt; Java            编程语言排行榜第一位，丰富的开源社区；主要作用：主要用来做后台服务</p>
</li>
<li><p>华山派 -&gt; python    特别适合做人工智能和机器学习</p>
</li>
<li><p>明教的波斯校区 -&gt; go语言 主要作用：用来做区块链</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java导学</tag>
      </tags>
  </entry>
  <entry>
    <title>1-2.编程语言的发展</title>
    <url>/2020/01/31/1-2.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E5%8F%91%E5%B1%95/</url>
    <content><![CDATA[<h1 id="编程语言的发展"><a href="#编程语言的发展" class="headerlink" title="编程语言的发展"></a>编程语言的发展</h1><p>编程：编写程序.</p>
<p>编程语言：和计算机的交流方式</p>
<p>编程语言的发展历程：</p>
<ol>
<li><p>机器语言：使用0和1与计算机进行交流</p>
<p>运算效率是最高的</p>
<p>对人是不友好的</p>
</li>
<li><p>汇编语言：使用符号来代替上方的01代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MOV ax,1</span><br><span class="line">MOV bx,1</span><br><span class="line">ADD ax,bx(加法的结果在ax里面)</span><br></pre></td></tr></table></figure>
</li>
<li><p>高级语言</p>
<p>人类更容易理解的编程语言</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 + 1</span><br></pre></td></tr></table></figure>

<p>高级语言虽然很牛B，但是在执行的时候，一定会把高级语言编程汇编，然后再转化成机器语言去执行</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java导学</tag>
      </tags>
  </entry>
  <entry>
    <title>1-1.导学</title>
    <url>/2020/01/31/1-1.%E5%AF%BC%E5%AD%A6/</url>
    <content><![CDATA[<h1 id="编程语言的发展"><a href="#编程语言的发展" class="headerlink" title="编程语言的发展"></a>编程语言的发展</h1><p>编程：编写程序</p>
<p>编程语言：使用什么样的方式和计算机交流</p>
<p>计算机语言的发展历程：</p>
<ol>
<li>机器语言：使用0和1与计算机进行交流.    1 + 1 -&gt; 1 101010111 1 对人不友好</li>
<li>汇编语言：把01的机器码进行汇总，方便人们使用. ADD 1 1</li>
<li>高级语言：人类更加容易理解的编程语言. 1 + 1</li>
</ol>
<p>编程语言的发展：按照人类更容易理解的方向发展.</p>
]]></content>
      <categories>
        <category>Java-第一章</category>
      </categories>
      <tags>
        <tag>Java导学</tag>
      </tags>
  </entry>
</search>
